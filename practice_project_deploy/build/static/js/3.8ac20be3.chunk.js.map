{"version":3,"sources":["components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","sendRequest","useHttp","addComment","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","status","error","commentsData","data","useCallback","LoadingSpinner","length","onClick","HighlightedQuote","console","log","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","quoteData","path","exact","to","url","NoQuotesFound"],"mappings":"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","file":"static/js/3.8ac20be3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\",\"actions\":\"HighlightedQuote_actions__3W1GK\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    onAddedComment();\n  }, [onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    error,\n    data: commentsData,\n  } = useHttp(getAllComments, true);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const onAddedComment = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments = [];\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner></LoadingSpinner>\n      </div>\n    );\n  }\n\n  if (status === \"error\") {\n    comments = (\n      <div className=\"centered focused\">\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && (!commentsData || commentsData.length === 0)) {\n    comments = (\n      <div className=\"centered focused\">\n        <p>No comments available</p>\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && commentsData.length > 0) {\n    comments = <CommentsList comments={commentsData}></CommentsList>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      {/* <h2>User Comments</h2> */}\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={onAddedComment}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment } from \"react\";\nimport classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  console.log(\"quote\", props.quote);\n\n  return (\n    <Fragment>\n      <figure className={classes.quote}>\n        <p>{props.quote.text}</p>\n        <figcaption>{props.quote.author}</figcaption>\n      </figure>\n    </Fragment>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: quoteData,\n    error,\n  } = useHttp(getSingleQuote, true);\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner></LoadingSpinner>\n      </div>\n    );\n  }\n\n  if (status === \"error\") {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && !quoteData.text) {\n    return <NoQuotesFound></NoQuotesFound>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote quote={quoteData}></HighlightedQuote>\n      <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments></Comments>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}