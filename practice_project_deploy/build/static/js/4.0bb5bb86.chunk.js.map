{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/AddQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","navigation","useHistory","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","push","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","AddQuote","useHttp","addQuote","sendRequest","status","history","useEffect","quote"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCoE/BC,EAhEG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAaC,cAuBnB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEC,KAAMJ,EACNK,QAAQ,gDAEV,cAAC,EAAD,UACE,uBACEC,QAhBe,WACrBL,GAAc,IAgBRV,UAAWC,IAAQe,KACnBC,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBf,EAAegB,QAAQC,MACvCC,EAAchB,EAAac,QAAQC,MAIzCvB,EAAMyB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,IAEhDZ,EAAWgB,KAAK,YAkBZ,UAKG5B,EAAM6B,WACL,qBAAK5B,UAAWC,IAAQ4B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK9B,OAEtC,sBAAKL,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK5B,OAEpC,qBAAKP,UAAWC,IAAQoC,QAAxB,SACE,wBAAQC,QA/BW,WAC3B5B,GAAc,IA8BiCV,UAAU,MAAjD,kC,gBCjCGuC,UAtBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUhC,cAEhBiC,qBAAU,WACO,cAAXF,GACFC,EAAQjB,KAAK,aAEd,CAACgB,EAAQC,IAMZ,OACE,cAAC,EAAD,CACEhB,UAAsB,YAAXe,EACXnB,WAPe,SAACsB,GAClBJ,EAAYI","file":"static/js/4.0bb5bb86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt, useHistory } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n  const navigation = useHistory();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n\n    navigation.push(\"/quotes\");\n  }\n\n  const onFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const focusOnSubmitHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message=\"Your form inputs will be lost are you sure?\"\n      ></Prompt>\n      <Card>\n        <form\n          onFocus={onFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={focusOnSubmitHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst AddQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const onAddQuote = (quote) => {\n    sendRequest(quote);\n  };\n\n  return (\n    <QuoteForm\n      isLoading={status === \"pending\"}\n      onAddQuote={onAddQuote}\n    ></QuoteForm>\n  );\n};\n\nexport default AddQuote;\n"],"sourceRoot":""}